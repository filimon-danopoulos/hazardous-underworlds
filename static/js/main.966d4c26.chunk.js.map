{"version":3,"sources":["Hazards.tsx","Start.tsx","App.tsx","theme.ts","index.tsx"],"names":["Hazards","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activeHazards","hazards","Math","floor","random","length","_this2","turn","availableHazards","filter","h","includes","newHazards","toConsumableArray","i","incrementalHazards","push","splice","shift","setState","_this3","classes","react_default","a","createElement","className","toolbar","map","Card","key","title","card","CardHeader","subheader","subHeader","flavour","CardContent","Typography","variant","gutterBottom","dangerouslySetInnerHTML","__html","effect","replace","duration","CardActions","Button","button","size","onClick","x","j","hasNextTurn","Fab","fab","nextTurn","ChevronRight_default","React","Component","withStyles","theme","createStyles","margin","spacing","maxWidth","concat","position","bottom","right","mixins","marginLeft","marginRight","fontStyle","Start","Fragment","FormControlLabel","control","Switch","checked","onChange","toggleIncrementalHazards","color","label","labelPlacement","startGame","App","maxTurns","t","createMuiTheme","palette","primary","main","secondary","MuiThemeProvider","CssBaseline","AppBar","Toolbar","src_Start","src_Hazards","assign","data","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.966d4c26.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { createStyles, Theme, WithStyles, withStyles, Card, CardContent, Typography, CardActions, Button, CardHeader, Fab } from '@material-ui/core';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  card: {\r\n    margin: theme.spacing(3),\r\n    maxWidth: `calc(100hw - ${theme.spacing(6)}px)`\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2)\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  button: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto'\r\n  },\r\n  subHeader: {\r\n    fontStyle: 'italic'\r\n  }\r\n});\r\n\r\ntype hazard = {\r\n  title: string,\r\n  flavour: string,\r\n  effect: string,\r\n  duration: string\r\n}\r\n\r\ninterface IHazardsProps extends WithStyles<typeof styles> {\r\n  hazards: hazard[];\r\n  nextTurn: () => void;\r\n  hasNextTurn: boolean;\r\n  turn: number;\r\n  incrementalHazards: boolean;\r\n}\r\n\r\ninterface IHazardsState {\r\n  activeHazards: hazard[];\r\n}\r\n\r\nclass Hazards extends React.Component<IHazardsProps, IHazardsState> {\r\n  constructor(props: IHazardsProps) {\r\n    super(props);\r\n    this.state = {\r\n      activeHazards: [this.props.hazards[Math.floor(Math.random() * this.props.hazards.length)]]\r\n    }\r\n  }\r\n\r\n  public componentWillUpdate(props: IHazardsProps) {\r\n    if (props.turn > this.props.turn) {\r\n      const availableHazards = this.props.hazards.filter(h => !this.state.activeHazards.includes(h))\r\n      const newHazards = [...this.state.activeHazards]\r\n      for (let i = 0; i < (this.props.incrementalHazards ? this.props.turn + 1 : 1); i++) {\r\n        newHazards.push(availableHazards.splice(Math.floor(Math.random() * availableHazards.length), 1).shift()!)\r\n      }\r\n      this.setState({\r\n        activeHazards: newHazards\r\n      })\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props\r\n    return (\r\n      <div>\r\n        <div className={classes.toolbar} />\r\n        {this.state.activeHazards.map((h, i) => (\r\n          <Card key={h.title} className={classes.card}>\r\n            <CardHeader\r\n              classes={{ subheader: classes.subHeader }}\r\n              title={h.title}\r\n              subheader={h.flavour}\r\n            />\r\n            <CardContent>\r\n              <Typography variant=\"body1\" gutterBottom dangerouslySetInnerHTML={{\r\n                __html: h.effect.replace(/\\*(.*?)\\*/g, '<b>$1</b>')\r\n              }} />\r\n              <Typography variant=\"body1\" dangerouslySetInnerHTML={{\r\n                __html: h.duration.replace(/\\*(.*?)\\*/g, '<b>$1</b>')\r\n              }} />\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button\r\n                className={classes.button}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                onClick={() => this.setState({ activeHazards: this.state.activeHazards.filter((x, j) => j !== i) })}>\r\n                Remove\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n\r\n        ))}\r\n\r\n        {this.props.hasNextTurn ?\r\n          <Fab className={classes.fab} onClick={() => this.props.nextTurn()}>\r\n            <ChevronRightIcon />\r\n          </Fab> :\r\n          null\r\n        }\r\n      </div >\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Hazards);","import React from 'react';\r\n\r\nimport { createStyles, Theme, WithStyles, withStyles, Card, CardContent, Typography, CardActions, Button, CardHeader, FormControlLabel, Switch } from '@material-ui/core';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  card: {\r\n    margin: theme.spacing(3),\r\n    maxWidth: `calc(100hw - ${theme.spacing(6)}px)`\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  button: {\r\n    marginLeft: 'auto',\r\n    marginRight: theme.spacing(2)\r\n  }\r\n});\r\n\r\ninterface IStartProps extends WithStyles<typeof styles> {\r\n  startGame: () => void;\r\n  incrementalHazards: boolean;\r\n  toggleIncrementalHazards: () => void;\r\n}\r\n\r\ninterface IStartState {\r\n}\r\n\r\nclass Start extends React.Component<IStartProps, IStartState> {\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.toolbar} />\r\n        <Card className={classes.card}>\r\n          <CardHeader title=\"Hazerdous Underworlds\" />\r\n          <CardContent>\r\n            <Typography variant=\"body1\" gutterBottom>\r\n              This app will allow you to manage hazards for the game Warhammer Underworlds.\r\n            </Typography>\r\n            <Typography variant=\"body1\" gutterBottom>\r\n              Select if you want an incremental amount of hazards or a single hazard per turn and start the game by clicking start!\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={this.props.incrementalHazards}\r\n                  size=\"small\"\r\n                  onChange={() => this.props.toggleIncrementalHazards()}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Inc. Hazards\"\r\n              labelPlacement=\"start\"\r\n            />\r\n            <Button className={classes.button} size=\"small\" color=\"secondary\" variant=\"contained\" onClick={() => this.props.startGame()}>Start!</Button>\r\n          </CardActions>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Start);","import React from 'react';\nimport { MuiThemeProvider, CssBaseline, Typography, AppBar, Toolbar } from '@material-ui/core';\nimport theme from './theme';\nimport data from './hazards.json';\nimport Hazards from './Hazards';\nimport Start from './Start';\n\ninterface IAppProps { }\n\ninterface IAppState {\n  turn: number;\n  incrementalHazards: boolean;\n  maxTurns: number;\n}\n\nclass App extends React.Component<IAppProps, IAppState> {\n  constructor(props: IAppProps) {\n    super(props);\n    this.state = {\n      turn: 0,\n      incrementalHazards: true,\n      maxTurns: 3\n    }\n  }\n\n  public render(): JSX.Element {\n    const t = theme()\n    return (\n      <div className=\"App\">\n        <MuiThemeProvider theme={t}>\n          <CssBaseline />\n          <div className=\"App-content\">\n            <AppBar position=\"fixed\">\n              <Toolbar>\n                <Typography variant=\"h6\">\n                  Hazard Phase {this.state.turn}\n                </Typography>\n              </Toolbar>\n            </AppBar>\n            {this.state.turn === 0 ?\n              <Start\n                startGame={() => this.setState({ turn: this.state.turn + 1 })}\n                incrementalHazards={this.state.incrementalHazards}\n                toggleIncrementalHazards={() => this.setState({ incrementalHazards: !this.state.incrementalHazards })}\n              /> :\n              <Hazards\n                hazards={data.hazards}\n                nextTurn={() => this.setState({ turn: this.state.turn + 1 })}\n                hasNextTurn={this.state.turn < this.state.maxTurns}\n                {...this.state}\n              />\n            }\n          </div>\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nexport default () => {\r\n  return createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#424242'\r\n      },\r\n      secondary: {\r\n        main: '#616161'\r\n      }\r\n    },\r\n  });\r\n};","import 'typeface-roboto';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}